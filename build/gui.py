# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

from pytube import YouTube, Playlist
from pathlib import Path
import threading

from tools import (
    is_playlist,
    make_dir_for_playlist_download,
    download_playlist,
    get_maxquality_audio_stream_itag,
    get_maxquality_video_stream_itag,
)

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox

SCRIPT_PATH = Path(__file__).parent
ASSETS_PATH = SCRIPT_PATH.joinpath("assets").joinpath("frame0")
DOWNLOAD_PATH = Path(__file__).parent.parent


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH.joinpath(path)


window = Tk()

window.resizable(False, False)
window.title("Youtube Downloader")
window.geometry("585x326")
window.configure(bg="#FFFFFF")


def button1_handler():
    url = entry_1.get()
    if is_playlist(url):
        playlist = Playlist(url)
        playlist_path = make_dir_for_playlist_download(playlist, DOWNLOAD_PATH)
        download_playlist(playlist, playlist_path, download_audio=download_audio)

    else:
        download_audio(url, DOWNLOAD_PATH.joinpath("audio"))


def button2_handler():
    url = entry_1.get()
    if is_playlist(url):
        playlist = Playlist(url)
        playlist_path = make_dir_for_playlist_download(playlist, DOWNLOAD_PATH)
        download_playlist(playlist, playlist_path, download_video=download_video)

    else:
        download_video(url, DOWNLOAD_PATH.joinpath("video"))


def download_audio(url: str, path: Path):
    """
    The function `download_audio` downloads the audio from a YouTube video given a url.
    """
    try:
        yt = YouTube(url)
        yt.register_on_complete_callback(on_audio_download_complete(yt.title))
        stream = yt.streams.get_by_itag(get_maxquality_audio_stream_itag(yt))
        canvas.itemconfig(text_id, text="Downloading...")
        # status
        canvas.itemconfig(download_status, text=f"Start Downloading {yt.title}")
        print(f'Sound "{yt.title}" start downloading')
        stream.download(path)
    except Exception as e:
        print(e)
    finally:
        canvas.itemconfig(download_status, text="Audio download successfully")
        print(f'Sound "{yt.title}" download successfully')


def download_audio_thread():
    """
    The function `download_audio_thread` creates a new thread and starts the `download_audio` function
    in that thread.
    """
    threading.Thread(target=button1_handler).start()


def on_audio_download_complete(title: str):
    print(f'Download sound "{title}" add to queue')
    canvas.itemconfig(text_id, text="Download completed")
    window.after(2000, lambda: canvas.itemconfig(text_id, text="Downloaded"))
    window.after(4000, lambda: canvas.itemconfig(text_id, text="Video URL"))


def download_video(url: str, path: Path):
    try:
        yt = YouTube(url)
        yt.register_on_complete_callback(on_video_download_complete(yt.title))
        stream = yt.streams.get_by_itag(get_maxquality_video_stream_itag(yt))
        canvas.itemconfig(text_id, text="Downloading...")
        # status
        canvas.itemconfig(download_status, text=f"Start Downloading {yt.title}")
        print(f'Video "{yt.title}" start downloading')
        stream.download(path)
    except Exception as e:
        print(e)
    finally:
        canvas.itemconfig(download_status, text="Video download successfully")
        print(f'Video "{yt.title}" download successfully')


def download_video_thread():
    threading.Thread(target=button2_handler).start()


def on_video_download_complete(title: str):
    print(f'Download video "{title}" add to queue')
    canvas.itemconfig(text_id, text="Download completed")
    window.after(2000, lambda: canvas.itemconfig(text_id, text="Downloaded"))
    window.after(4000, lambda: canvas.itemconfig(text_id, text="Video URL"))


canvas = Canvas(
    window,
    bg="#FFFFFF",
    height=326,
    width=585,
    bd=0,
    highlightthickness=0,
    relief="ridge",
)

canvas.place(x=0, y=0)
canvas.create_rectangle(0.0, 0.0, 219.0, 404.0, fill="#FFFFFF", outline="")

canvas.create_rectangle(0.0, 0.0, 169.0, 390.0, fill="#3C3C3C", outline="")

canvas.create_rectangle(211.0, 173.0, 516.0, 216.0, fill="#FFFFFF", outline="")

entry_image_1 = PhotoImage(file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(363.5, 192.0, image=entry_image_1)
entry_1 = Entry(bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
entry_1.place(x=232.0, y=177.0, width=263.0, height=28.0)

canvas.create_text(
    236.0,
    17.0,
    anchor="nw",
    text="Youtube Downloader",
    fill="#000000",
    font=("LexendDeca Bold", 24 * -1),
)

canvas.create_text(
    242.0,
    54.0,
    anchor="nw",
    text="Download all your videos\nwith this tool! Just provide the video url and voalah!",
    fill="#000000",
    font=("LexendDeca ExtraLight", 13 * -1),
)

text_id = canvas.create_text(
    236.0,
    143.0,
    anchor="nw",
    text="Video or Playlist URL",
    fill="#000000",
    font=("LexendDeca ExtraLight", 16 * -1),
)
canvas.itemconfig(text_id, fill="#ff0000")  # Change the color of the text to red

download_status = canvas.create_text(
    236.0,
    120.0,
    anchor="nw",
    text="Status",
    fill="#000000",
    font=("LexendDeca ExtraLight", 16 * -1),
)
canvas.itemconfig(download_status, fill="#0000FF")

button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=download_audio_thread,
    relief="flat",
)
button_1.place(x=427.0, y=216.0, width=98.0, height=40.0)

button_image_2 = PhotoImage(file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=download_video_thread,
    relief="flat",
)
button_2.place(x=203.0, y=216.0, width=98.0, height=40.0)

image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(109.0, 90.0, image=image_image_1)
window.resizable(False, False)
window.mainloop()
